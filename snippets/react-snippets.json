{
    "ES6 React Import": {
        "scope": "javascript,javascriptreact",
        "prefix": "r-import",
        "body": "import React from 'react'\n"
    },
    "ES6 React & Component Import": {
        "scope": "javascript,javascriptreact",
        "prefix": "r-importcomponent",
        "body": "import React, { Component } from 'react'\n"
    },
    "Initial function component for React": {
        "scope": "javascript,javascriptreact",
        "prefix": "rf-export",
        "body": [
            "import React from 'react'",
            "",
            "function ${1:Component} () {",
            "\treturn (",
            "\t\t<div>",
            "\t\t\t<h1>${1:Component}</h1>",
            "\t\t</div>",
            "\t)",
            "}",
            "",
            "export default ${1:Component}"
        ],
        "description": "Initial function component file for React"
    },
    "Initial arrow function component for React": {
        "scope": "javascript,javascriptreact",
        "prefix": "raf-export",
        "body": [
            "import React from 'react'",
            "",
            "const ${1:Component} = () => (",
            "\t<div>",
            "\t\t<h1>${1:Component}</h1>",
            "\t</div>",
            ")",
            "",
            "export default ${1:Component}"
        ],
        "description": "Initial arrow function component file for React JUST PRESENTATIONAL"
    },
    "Initial function component with useState for React": {
        "scope": "javascript,javascriptreact",
        "prefix": "rf-usestate",
        "body": [
            "import React, { useState } from 'react'",
            "",
            "function ${1:Component} () {",
            "\tconst [${2:state}, set${2:state}] = useState('${2:state}')",
            "",
            "\treturn (",
            "\t\t<div>",
            "\t\t\t<h1>${1:Component}</h1>",
            "\t\t\t<span>{${2:state}}</span>",
            "\t\t</div>",
            "\t)",
            "}",
            "",
            "export default ${1:Component}"
        ],
        "description": "Initial function component file with useState for React"
    },
    "Initial arrow function component with useState for React": {
        "scope": "javascript,javascriptreact",
        "prefix": "raf-usestate",
        "body": [
            "import React, { useState } from 'react'",
            "",
            "const ${1:Component} = () => {",
            "\tconst [${2:state}, set${2:state}] = useState('${2:state}')",
            "",
            "\treturn (",
            "\t\t<div>",
            "\t\t\t<h1>${1:Component}</h1>",
            "\t\t\t<span>{${2:state}}</span>",
            "\t\t</div>",
            "\t)",
            "}",
            "",
            "export default ${1:Component}"
        ],
        "description": "Initial arrow function component file with useState for React"
    },
    "Auxiliar arrow function component for React": {
        "scope": "javascript,javascriptreact",
        "prefix": "raf-auxiliar",
        "body": [
            "const ${1:Component} = () => {",
            "",
            "\treturn (",
            "\t\t<div>",
            "\t\t\t<h1>${1:Component}</h1>",
            "\t\t</div>",
            "\t)",
            "}"
        ],
        "description": "Auxiliar arrow function component for React"
    },
    "Initial styled-components for React": {
        "scope": "javascript,javascriptreact",
        "prefix": "st-export",
        "body": [
            "import styled from 'styled-components'",
            "\t",
            "export const ${1:Container} = styled.${2:div}`",
            "\t$0",
            "`"
        ],
        "description": "Initial styled-components file for React"
    },
    "styled-components for React": {
        "scope": "javascript,javascriptreact",
        "prefix": "st-component",
        "body": [
            "import styled from 'styled-components'",
            "\t",
            "const ${1:Container} = styled.${2:div}`",
            "\t$0",
            "`"
        ],
        "description": "Normal styled-components in React' file"
    },
    "Initial Router component for React ": {
        "scope": "javascript",
        "prefix": "r-router",
        "body": [
            "import React from 'react'",
            "import {",
            "\tSwitch,",
            "\tBrowserRouter,",
            "\tRoute,",
            "\tRedirect",
            "} from 'react-router-dom'\n",
            "",
            "const ${1:Router} = () => (",
            "\t\t<BrowserRouter>",
            "\t\t\t<Switch>",
            "\t\t\t\t<Route exact path='/' component={Home} />",
            "\t\t\t\t<Route path='/${2:other}' component={${2/(.*)/${2:/capitalize}/}} />",
            "\t\t\t\t<Route component={Page404} />",
            "\t\t\t\t<Redirect from='*' to='/' />",
            "\t\t\t</Switch>",
            "\t\t</BrowserRouter>",
            ")",
            "",
            "export default ${1:Router}"
        ],
        "description": "Initial arrow function component file with useState for React"
    },
    "reactClassCompoment": {
        "scope": "javascript",
        "prefix": "rcc",
        "body": "import React, { Component } from 'react'\n\nexport default class ${1:componentName} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n",
        "description": "Creates a React component class with ES6 module system"
    },
    "ES6 react-router Link Import": {
        "scope": "javascript,javascriptreact",
        "prefix": "rr-importlink",
        "body": "import { Link } from 'react-router-dom';\n"
    },
    "ES6 react-router NavLink Import": {
        "scope": "javascript,javascriptreact",
        "prefix": "rr-importnavlink",
        "body": "import { NavLink } from 'react-router-dom'\n"
    },
    "react-router NavLink": {
        "scope": "javascript,javascriptreact",
        "prefix": "rr-navlink",
        "body": "<NavLink to={${1:path}}>{$anchorText}</NavLink>\n"
    },
    "react-router Link": {
        "scope": "javascript,javascriptreact",
        "prefix": "rr-link",
        "body": "<Link to={${1:path}}>{$anchorText}</Link>\n"
    },
    "destructProps": {
        "scope": "javascript",
        "prefix": "r-destructprops",
        "body": [
            "const { $1 } = this.props"
        ],
        "description": "Creates and assigns a local variable using props destructing inside a Class Component"
    },
    "destructState": {
        "scope": "javascript",
        "prefix": "r-destructstate",
        "body": [
            "const { $1 } = this.state"
        ],
        "description": "Creates and assigns a local variable using state destructing inside a Class Component"
    },
    "useState": {
        "scope": "javascript,javascriptreact",
        "prefix": "ru-useState",
        "body": [
            "const [${1:state}, set${1/(.*)/${1:/capitalize}/}] = useState(${2:initialState})"
        ]
    },
    "useEffect": {
        "scope": "javascript,javascriptreact",
        "prefix": "ru-useEffect",
        "body": [
            "useEffect(() => {",
            "  ${1:effect}",
            "  return () => {",
            "    ${3:cleanup}",
            "  }",
            "},[${2:input}])"
        ]
    },
    "useContext": {
        "scope": "javascript,javascriptreact",
        "prefix": "ru-useContext",
        "body": [
            "const ${1:context} = useContext(${2:contextValue})"
        ]
    },
    "useReducer": {
        "scope": "javascript,javascriptreact",
        "prefix": "ru-useReducer",
        "body": [
            "const [state, dispatch] = useReducer(${1:reducer}, ${2:initialState}, ${3:init})"
        ]
    },
    "useCallback": {
        "scope": "javascript,javascriptreact",
        "prefix": "ru-useCallback",
        "body": [
            "useCallback(",
            "  () => {",
            "    ${1:callback}",
            "  },",
            "  [${2:input}],",
            ")"
        ]
    },
    "useMemo": {
        "scope": "javascript,javascriptreact",
        "prefix": "ru-useMemo",
        "body": [
            "useMemo(() => ${1:function}, ${2:input})"
        ]
    },
    "useRef": {
        "scope": "javascript,javascriptreact",
        "prefix": "ru-useRef",
        "body": [
            "const ${1:ref} = useRef(${2:initialValue})"
        ]
    },
    "useLayoutEffect": {
        "scope": "javascript,javascriptreact",
        "prefix": "ru-useLayoutEffect",
        "body": [
            "useLayoutEffect(() => {",
            "  ${1:effect}",
            "  return () => {",
            "    ${3:cleanup}",
            "  }",
            "},[${2:input}])"
        ]
    }
}